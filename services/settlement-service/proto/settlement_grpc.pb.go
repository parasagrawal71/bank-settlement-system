// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v6.32.1
// source: services/settlement-service/proto/settlement.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SettlementService_GetSettlementStatus_FullMethodName = "/settlement.SettlementService/GetSettlementStatus"
)

// SettlementServiceClient is the client API for SettlementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SettlementServiceClient interface {
	GetSettlementStatus(ctx context.Context, in *SettlementStatusRequest, opts ...grpc.CallOption) (*SettlementStatusResponse, error)
}

type settlementServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSettlementServiceClient(cc grpc.ClientConnInterface) SettlementServiceClient {
	return &settlementServiceClient{cc}
}

func (c *settlementServiceClient) GetSettlementStatus(ctx context.Context, in *SettlementStatusRequest, opts ...grpc.CallOption) (*SettlementStatusResponse, error) {
	out := new(SettlementStatusResponse)
	err := c.cc.Invoke(ctx, SettlementService_GetSettlementStatus_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SettlementServiceServer is the server API for SettlementService service.
// All implementations must embed UnimplementedSettlementServiceServer
// for forward compatibility
type SettlementServiceServer interface {
	GetSettlementStatus(context.Context, *SettlementStatusRequest) (*SettlementStatusResponse, error)
	mustEmbedUnimplementedSettlementServiceServer()
}

// UnimplementedSettlementServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSettlementServiceServer struct {
}

func (UnimplementedSettlementServiceServer) GetSettlementStatus(context.Context, *SettlementStatusRequest) (*SettlementStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSettlementStatus not implemented")
}
func (UnimplementedSettlementServiceServer) mustEmbedUnimplementedSettlementServiceServer() {}

// UnsafeSettlementServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SettlementServiceServer will
// result in compilation errors.
type UnsafeSettlementServiceServer interface {
	mustEmbedUnimplementedSettlementServiceServer()
}

func RegisterSettlementServiceServer(s grpc.ServiceRegistrar, srv SettlementServiceServer) {
	s.RegisterService(&SettlementService_ServiceDesc, srv)
}

func _SettlementService_GetSettlementStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettlementStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettlementServiceServer).GetSettlementStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SettlementService_GetSettlementStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettlementServiceServer).GetSettlementStatus(ctx, req.(*SettlementStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SettlementService_ServiceDesc is the grpc.ServiceDesc for SettlementService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SettlementService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "settlement.SettlementService",
	HandlerType: (*SettlementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSettlementStatus",
			Handler:    _SettlementService_GetSettlementStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/settlement-service/proto/settlement.proto",
}
